apiVersion: v1
kind: Node
metadata:
  name: runpod-virtual-node
  labels:
    kubernetes.io/hostname: runpod-virtual-node
    runpod.io/virtual: "true"
  annotations:
    node.kubernetes.io/exclude-from-external-load-balancers: "true"
spec:
  taints:
    - key: runpod.io/virtual
      effect: NoSchedule
---
apiVersion: node.k8s.io/v1
kind: RuntimeClass
metadata:
  name: runpod-virtual
handler: runpod-virtual
scheduling:
  nodeSelector:
    runpod.io/virtual: "true"
  tolerations:
    - key: runpod.io/virtual
      operator: Exists
      effect: NoSchedule
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: runpod-controller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: runpod-controller
rules:
  # List and watch jobs across all namespaces
  - apiGroups: [ "batch" ]
    resources: [ "jobs" ]
    verbs: [ "get", "list", "watch" ]
  # Get node information
  - apiGroups: [ "" ]
    resources: [ "nodes" ]
    verbs: [ "get", "list", "watch" ]
  # For job modification and pod creation/deletion in any namespace
  - apiGroups: [ "batch" ]
    resources: [ "jobs" ]
    verbs: [ "update", "patch" ]
  - apiGroups: [ "batch" ]
    resources: [ "jobs/status" ]
    verbs: [ "get", "update", "patch" ]
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
  # Read secrets only in the kube-system namespace (for RunPod API key)
  - apiGroups: [ "" ]
    resources: [ "secrets" ]
    verbs: [ "get" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: runpod-controller
subjects:
  - kind: ServiceAccount
    name: runpod-controller
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: runpod-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runpod-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: runpod-controller
  template:
    metadata:
      labels:
        app: runpod-controller
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: runpod-controller
      serviceAccountName: runpod-controller
      imagePullSecrets:
        - name: regcred
      containers:
        - name: controller
          image: ghcr.io/bsvogler/gpu-runpod-controller:latest
          args:
            - "--reconcile-interval=30"
            - "--pending-job-threshold=1"
            - "--max-pending-time=0"
            - "--max-gpu-price=0.5"
            - "--health-server-address=:8080"
          ports:
            - containerPort: 8080
              name: http
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
          envFrom:
            - secretRef:
                name: runpod-controller-secrets
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi